@model IEnumerable<AHM_TOTAL_TRAVEL_WEB.Models.TipeofpayListViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container card">
    <div class="ui basic segment">

        <div class="ui icon attached message">
            <i class="icon dollar sign"></i>
            <div class="content">
                <div class="header">
                    Tipos de pagó
                </div>
            </div>
        </div>

        <br>
        <div class="ui grid mb-3">
            <div class="eight wide column">
                <button id="createTipeofpay" class="ui small btn-edit text-white labeled icon button"><i class="plus icon"></i>Nuevo</button>
            </div>
        </div>
        <style>
            table thead tr th {
                background-color: #2b2b2b;
                color: white;
            }
        </style>
        <table id="grdPayment" class="display ui compact selectable celled table" style="width:100%;">
            <thead>
                <tr>
                    <th>
                        Descripción
                    </th>

                    <th width="200px"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => item.Descripcion)
                        </td>
                        <td>
                            <a class="ui large icon btn-edit button" id="Updatepaymet" onclick="Updatepaymet(@item.ID)">
                                <i class="pencil alternate icon icon-crud"></i>
                            </a>
                            <button class="ui large icon btn-delete button" onclick=" DeleteTipeofpay(@item.ID)">
                                <i class="trash alternate icon icon-crud"></i>
                            </button>
                            <a href="@Url.Action("details","Tipeofpay",new {  id=item.ID})" class="ui large icon button">
                                <i class="bi bi-info-circle fa-lg icon-crud"></i>
                            </a>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br>
    </div>
</div>
<br>

<div class="ui modal longer" id="modalCreate">
    <i class="close icon"></i>
    <div class="header">
        Ingrese un tipo de pagó
    </div>
    <form asp-action="Create" asp-controller="Tipeofpay" id="createtypeofpayForm">
        <div class="ui form attached fluid segment">
            <div class="content">
                <div class="required field">
                    <label class="ui label">Descripción</label>
                    <div class="two fields">
                        <div class="field">
                            <label> </label>
                            <input id="payment" name="TiPa_Descripcion" placeholder="Descripción del tipo de pagó" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <div class="actions">
        @*<button class="ui button btn-purple text-white" id="closeTipeofpay">Cancelar</button>
            <button class="ui button" id="sendTipeofpay" onclick="validar()">Guardar</button>*@

        <button class="ui button btn-edit text-white" id="sendTipeofpay" onclick="validar()">Guardar</button>
        <button class="ui button" id="closeTipeofpay">Cancelar</button>
    </div>
</div>


<div class="ui modal" id="modalUpdate">
    <div class="header">
        Actualiza un tipo de pagó
    </div>
    <form asp-action="Update" asp-controller="Tipeofpay" id="updateTipeofpayForm">
        <div class="ui form attached fluid segment">
            <div class="content">
                <input name="TiPa_ID" id="TiPa_ID" style="visibility:hidden" />
                <div class="required field">
                    <label class="ui label">Descripción</label>
                    <input name="TiPa_Descripcion" id="TiPa_DescripcionUpdate" />
                </div>
            </div>
        </div>
    </form>
    <div class="actions">
        @*<button class="ui button btn-purple text-white" id="sendEditTipeofpay">Guardar</button>
            <button class="ui button" id="closeEditTipeofpay">Cancelar</button>*@

        <button class="ui button btn-edit text-white" id="sendEditTipeofpay">Guardar</button>
        <button class="ui button" id="closeEditTipeofpay">Cancelar</button>
    </div>
</div>


@section HighlightTile{

    <script src="~/js/PaymentTypes/Update.js"></script>
    <script src="~/js/PaymentTypes/Create.js"></script>
    <script>
        $("#SalesModule").addClass("active");
        $("#SalesModule").addClass("expandedList");
        $("#SalesModule").prop("aria-expanded");
        $("#SalesModule").attr("aria-expanded", "true");

        $("#Sale_Schema").addClass("show");

        $("#TipeofpayTile").addClass("activeTile");
    </script>
}

@section Scripts{


    <script>
        function validar() {
            const userValidateArray = [
                { validateMessage: "Ingrese un tipo de pagó", Jqueryinput: $("#payment") }
            ];

            const userValidate = ValidateForm(userValidateArray);

            if (userValidate) {

                var data = PaymentTypesViewModel;
                data.tiPa_Descripcion = $("#payment").val();

                const response = ajaxRequest(
                    "https://totaltravel.somee.com/API/PaymentTypes/Insert",
                    data, "POST"
                );
                if (response.code == 200) {
                    location.reload();
                }
            }


        }
        $("#createTipeofpay").click(() => {
            $("#modalCreate").modal("show")
        })
        $("#closeTipeofpay").click(() => {
            $("#modalCreate").modal('hide');
        });
        // ----------------------------------- EVENTS ------------------------------------
        $(document).ready(function () {

            var table = $("#grdPayment").DataTable({
                stateSave: true,
                language: {
                    "url": "https://cdn.datatables.net/plug-ins/1.10.21/i18n/Spanish.json"
                },
                //Aqui se ingresa el numero de columnas que tiene la tabla
                columns: [
                    {},
                    {}
                ],
                order: [[1, 'asc']],
                dom: 'Bfrtip',

                //Son los botones de acciones para exportar
                buttons: [
                    {
                        extend: 'pdfHtml5',
                        text: '<i class= "file pdf icon"></i> Exportar como PDF',
                        className: "btn-primary ui small btn-grey text-purple icon ui button mb-2",
                        exportOptions: {
                            columns: [0, 1]
                        }
                    },
                    {
                        extend: 'excelHtml5',
                        text: '<i class="file excel icon"></i> Exportar a excel',
                        className: "btn-primary ui small btn-grey text-purple icon ui button mb-2",
                        exportOptions: {
                            columns: [0, 1]
                        }
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="file csv icon"></i> Exportar como CSV',
                        className: "btn-primary ui small btn-grey text-purple icon ui button mb-2"
                    },
                ]
            });
        });

        function DeleteTipeofpay(id) {
            const Tipeofpay = () => {
                const result = ajaxRequest("/PaymentTypes/Delete?id=" + id, null, "POST");
                if (result > 0) {
                    window.location.href = '/PaymentTypes?success=true';
                }
            };

            sweetAlertconfirm("¿Estas Seguro de Eliminar el Registro Seleccionado?", "Este registro se borrara permanentemente", "warning", Tipeofpay);

        };


        const params = new URLSearchParams(window.location.search);
        const izziSuccess = params.get("success");

        if (izziSuccess == "true") {
            iziToastAlert(title = "Proceso completado", message = "La acción se ha completado exitosamente.", type = "success");
        }



        var send = false;
    </script>
}