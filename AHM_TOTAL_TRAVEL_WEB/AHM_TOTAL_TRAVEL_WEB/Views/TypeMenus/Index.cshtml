@model IEnumerable<AHM_TOTAL_TRAVEL_WEB.Models.TypeMenusListViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container card">
    <div class="ui basic segment">

        <div class="ui icon attached message">
            <i class="icon food"></i>
            <div class="content">
                <div class="header">
                    Tipo menús
                </div>
            </div>
        </div>

        <br>
        <div class="ui grid">
            <div class="eight wide column">
                <a  class="ui small btn-purple text-white labeled icon button" id="createTypeMenus">
                    <i class="plus icon"></i> Nuevo
                </a>
            </div>
            <div class="eight wide column">
                <div class="ui icon input" style="float:right;">
                    <input type="text" placeholder="Buscar..." id="txtSearch">
                    <i class="search icon"></i>
                </div>
            </div>
        </div>
        <style>
            table thead tr th {
                background-color: #2b2b2b;
                color: white;
            }
        </style>

        <table class="ui compact selectable celled table" id="grdTypeMenus">
            <thead>
                <tr>
                    <th>
                        Tipo de menú
                    </th>

                    <th width="200px"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.descripcion)
                    </td>
                    <td>
                        <button class="ui large icon btn-edit button" onclick="GetTypeMenus('@item.ID')">
                            <i class="pencil alternate icon  icon-crud"></i>
                        </button>
                        <button class="ui large icon btn-delete button" onclick="DeleteTypeMenus('@item.ID')">
                            <i class="trash alternate icon icon-crud"></i>
                        </button>
                        <a href="@Url.Action("Details","TypeMenus",new {  id=item.ID})" class="ui large icon button">
                            <i class="bi bi-info-circle fa-lg icon-crud"></i>
                        </a>
                    </td>
                </tr>
                }
            </tbody>
        </table>
        <br>

    </div>
</div>
<br>

<div class="ui modal" id="modalCreate">
    <div class="header">
        Ingresa un tipo de menú
    </div>
    <form asp-action="Create" asp-controller="TypeMenus" id="createTypeMenusForm">
        <div class="ui form attached fluid segment">
            <div class="content">

                <div class="field">
                    <label>Tipo de menú</label>
                    <input name="Time_Descripcion" id="Time_Descripcion" />
                    <label style="color: darkred; font-size: 16px;" class="labelvalidator" id="labelvalidatorError"></label>
                </div>

            </div>
        </div>
    </form>
    <div class="actions">
        <button class="ui button btn-purple text-white" id="sendTypeMenus">Guardar</button>
        <button class="ui button" id="closeTypeMenus">Cancelar</button>
    </div>
</div>


<div class="ui modal" id="modalUpdate">
    <div class="header">
        Actualiza un tipo de menú
    </div>
    <form asp-action="Update" asp-controller="TypeMenus" id="updateTypeMenusForm">
        <div class="ui form attached fluid segment">
            <div class="content">
                <div class="field">
                    <input name="Time_ID" id="Time_ID" />
                    <label>Descripción</label>
                    <input name="Time_Descripcion" id="Time_DescripcionUpdate" />
                    <label style="color: darkred; font-size: 16px;" class="labelvalidator" id="labelvalidatorUpdateError"></label>
                </div>
            </div>
        </div>
    </form>
    <div class="actions">
        <button class="ui button btn-purple text-white" id="sendEditTypeMenus">Guardar</button>
        <button class="ui button" id="closeEditTypeMenus">Cancelar</button>
    </div>
</div>


@section Scripts{
    <script src="~/js/TypeMenusJs/Create.js"></script>
    <script src="~/js/TypeMenusJs/Update.js"></script>
    <script>
        function DeleteTypeMenus(id) {
            const capsula1 = () => {
                ajaxRequest("TypeMenus/Delete?id=" + id, null, "POST")
            };

            sweetAlertconfirm("¿Seguro de eliminar este registro?", "Este registro se borrara permanentemente.", "warning", capsula1);

        };
    </script>
}
