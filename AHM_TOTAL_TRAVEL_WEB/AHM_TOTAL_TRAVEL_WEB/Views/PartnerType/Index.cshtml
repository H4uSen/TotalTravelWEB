@model IEnumerable<AHM_TOTAL_TRAVEL_WEB.Models.PartnerTypeListViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container card">
    <div class="ui basic segment">

        <div class="ui icon attached message">
            <i class="user icon"></i>
            <div class="content">
                <div class="header">
                    Tipos de Socios
                </div>
                <p>Crea, actualiza, elimina o busca y filtra .</p>
            </div>
        </div>

        <br>
        <div class="ui grid">
            <div class="eight wide column">
                <a class="ui small btn-purple text-white labeled icon button" id="createTipoPartner">
                    <i class="plus icon"></i> Nuevo
                </a>
            </div>
            <div class="eight wide column">
                <div class="ui icon input" style="float:right;">
                    <input type="text" placeholder="Buscar..." id="txtSearch">
                    <i class="search icon"></i>
                </div>
            </div>
        </div>
        <style>
            table thead tr th {
                background-color: #2b2b2b;
                color: white;
            }
        </style>
        <table class="ui compact selectable celled table" id="grdRestaurants">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Descripcion)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Rol_Descripcion)
                    </th>

                    <th width="300px"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Descripcion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Rol_Descripcion)
                        </td>

                        <td>
                            <button class="ui large icon btn-edit button"  id="UpdateBottomTipoPartner" onclick="GetTipoPartner('@item.ID')">
                                <i class="pencil alternate icon  icon-crud"></i>
                            </button><button class="ui large icon negative button" onclick="DeleteTipoPartner(@item.ID)">
                                <i class="trash alternate icon"></i>
                            </button><a href="@Url.Action("Details","PartnerType",new {  id=item.ID})" class="ui large icon button"><i class="bi bi-info-circle fa-lg"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table><br>

    </div>
</div>
<br>

<div class="ui modal" id="modalCreate">
    <div class="header">
        Ingresa un tipo de socio
    </div>
    <form asp-action="Create" asp-controller="PartnerType" id="createTipoPartnerForm">
        <div class="ui form attached fluid segment">
            <div class="content">
                <div class="two fields">
                    <div class="field">
                        <label>Descripcion</label>
                        <input name="TiPar_Descripcion" id="TiPar_Descripcion" />
                    </div>
                    <div class="required field">
                        <label>Tipo de Rol</label>
                        <select id="Rol_ID" name="Rol_ID" class="ui dropdown search" asp-items="ViewBag.Rol_ID">
                            <option value="">Seleccione un Rol</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <div class="actions">
        <button class="ui button btn-purple text-white" id="sendTipoPartner">Guardar</button>
        <button class="ui button" id="closeTipoPartner">Cancelar</button>
    </div>
</div>

<div class="ui modal" id="modalUpdate">
    <div class="header">
        Actualiza un tipo de menú
    </div>
    <form asp-action="Update" asp-controller="PartnerType" id="updateTipoPartnerForm">
        <div class="ui form attached fluid segment">
            <div class="content">
                <div class="two fields">
                    <div class="field">
                        <input name="TiPar_ID" id="TiPar_ID" />
                        <label>Descripcion</label>
                        <input id="TiPar_DescripcionUpdate" name="TiPar_Descripcion" />
                    </div>
                    <div class="required field">
                        <label>Tipo de Rol</label>
                        <select id="Rol_IDUpdate" name="Rol_ID" class="ui dropdown search" asp-items="ViewBag.Rol_ID">
                            <option value="">Seleccione un Rol</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <div class="actions">
        <button class="ui button btn-purple text-white" id="sendEditTipoPartner" onclick="sendUpdate()">Guardar</button>
        <button class="ui button" id="closeEditTipoPartner">Cancelar</button>
    </div>
</div>



@section Scripts{
    <script src="~/js/PartnerType/Create.js"></script>
    <script>
        $(document).ready(function () {
            $("#TiPar_ID").hide();
        });

        $("#closeEditTipoPartner").click(() => {
            $("#modalUpdate").modal('hide');
        });
        //$("#UpdateBottomTipoPartner").click(() => {
        //    $("#modalUpdate").modal('show');
        //});


        function GetTipoPartner(id) {
            var response = ajaxRequest("https://totaltravel.somee.com/API/PartnerType/Find?id=" + id);
            if (response.code == 200) {
                $('#TiPar_ID').val(id);
                $('#TiPar_DescripcionUpdate').val(response.data.descripcion);
                const parent = $("#Rol_IDUpdate").parent();
                parent.find(`.menu .item[data-value="${response.data.iD_Role_ID}"]`).addClass(["selected", "active"]);

                if ($('#TiPar_DescripcionUpdate').val() != 0) {
                    $("#modalUpdate").modal('show');
                }

            }
        }

       
        function sendUpdate() {
            console.log("a");
            const ValidateArray = [
                { validateMessage: "Ingrese una descripcion de tipo de socio", Jqueryinput: $("#TiPar_DescripcionUpdate") },
                { validateMessage: "Seleccione un Rol para el socio", Jqueryinput: $("#Rol_IDUpdate") }
            ];
            const userValidate = ValidateForm(ValidateArray);
            if (userValidate) {
                $("#updateTipoPartnerForm").submit();
            }

        }
        

        // ----------------------------------- EVENTS ------------------------------------
        TableSearchInput($("#txtSearch"), $("#grdRestaurants"), elemPerPage = 10)


        $("#grdRestaurants").paginationTdA({
            elemPerPage: 10
        });

        function DeleteTipoPartner(id) {
            const Tpartner = () => {
                const result = ajaxRequest("/PartnerType/Delete?id=" + id, null, "POST");
                if (result > 0) {
                    location.reload();
                }
            };

            sweetAlertconfirm("Estas Seguro de Eliminar el Registro Seleccionado?", "Este registro se borrara permanentemente", "warning", Tpartner);

        };

        $(document).ready(function () {
            $("#Time_ID").hide();

        });

        
    </script>
}