@model IEnumerable<AHM_TOTAL_TRAVEL_WEB.Models.ActivitiesListViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container card">
    <div class="ui basic segment">

        <div class="ui icon attached message">
            <i class="icon bicycle"></i>
            <div class="content">
                <div class="header">
                    Actividades
                </div>
            </div>
        </div>

        <br>
        <div class="ui grid mb-3">
            <div class="eight wide column">
                <button id="createActivities" class="ui small primary labeled icon btn-edit button"><i class="plus icon"></i>Nuevo</button>
            </div>
        </div>
        <style>
            table thead tr th {
                background-color: #2b2b2b;
                color: white;
            }
        </style>

        <table id="grdActivities" class="display ui compact selectable celled table" style="width:100%;">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Descripcion)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Tipo)
                    </th>
                    <th width="300px"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Descripcion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Tipo)
                        </td>

                        <td>
                            @*<a href="@Url.Action("Update","Activities",new {  id=item.ID})" class="ui large icon positive button"><i class="pencil alternate icon"></i></a>*@
                            @*<a href="@Url.Action("DeleteView","Activities",new {  id=item.ID})" class="ui large icon negative button"><i class="trash alternate icon"></i></a>*@
                            <button class="ui large icon btn-edit button" id="UpdateBottomActivities" onclick="GetActivities(@item.ID)">
                                <i class="pencil alternate icon icon-crud"></i>
                            </button>
                            <button class="ui large icon negative button" onclick="DeleteActividad(@item.ID)">
                                <i class="trash alternate icon icon-crud"></i>
                            </button>
                            <a href="@Url.Action("Details","Activities",new {  id=item.ID})" class="ui large icon button"><i class="bi bi-info-circle fa-lg icon-crud"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table><br>
    </div>
</div>
<br>


<div class="ui modal longer" id="modalCreate">
    <i class="close icon"></i>
    <div class="header">
        Ingresa una Actividad
    </div>
    <form asp-action="Create" asp-controller="Activities" id="createActivitiesForm">
        <div class="ui form attached fluid segment">
            <div class="content">
                <div class="required field">
                    <div class="two fields">
                        <div class="field">
                            <label>Descripcion de la Actividad</label>
                            <input id="Actividad" name="actv_Descripcion" placeholder="Descripcion de la Actividad" />
                        </div>
                        <div class="field">
                            <label>Tipo Actividad</label>
                            <select id="TiPoAc_ID" name="tiAc_ID" class="ui dropdown search" asp-items="ViewBag.TiAc_ID">
                                <option value="">Seleccione el tipo de Actividad</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <div class="actions">
        <button class="ui button btn-edit text-white" id="sendActivity">Guardar</button>
        <button class="ui button" id="closeActivity">Cancelar</button>
    </div>
</div>




<div class="ui modal" id="modalUpdate">
    <i class="close icon"></i>
    <div class="header">
        Actualiza la Actividad
    </div>
    <form asp-action="Update" asp-controller="Activities" id="updateActivitiesForm">
        <div class="ui form attached fluid segment">
            <div class="content">
                <div class="two fields">
                    <div class="field">
                        <input name="Actv_ID" id="Actv_ID" />
                        <label class="required">Descripcion</label>
                        <input id="ActividadUpdate" name="actv_Descripcion" placeholder="Descripcion de la Actividad" />

                    </div>
                    <div class="field">
                        <label class="required">Tipo Actividad</label>
                        <select id="TiPoAc_IDUpdate" name="tiAc_ID" class="ui dropdown search" asp-items="ViewBag.TiAc_ID">
                            <option value="">Seleccione el tipo de Actividad</option>
                        </select>

                    </div>

                </div>
            </div>
        </div>
    </form>
    <div class="actions">
        <button class="ui button btn-edit text-white" id="sendEditActivities" onclick="ValidarUpdate()">Guardar</button>
        <button class="ui button" id="closeEditActivities">Cerrar</button>
    </div>
</div>

@section Scripts{
    <script src="~/js/ActivitiesExtraJs/Create.js"></script>
    <script src="~/js/ActivitiesExtraJs/Update.js"></script>
<script>
    const params = new URLSearchParams(window.location.search);
    const izziSuccess = params.get("success");

    if (izziSuccess == "true") {
        iziToastAlert(title = "Proceso completado", message = "La acción se ha completado exitosamente.", type = "success");
    }
    //const update_success = FindGetValue("update_success");

    //if (update_success) {
    //    iziToastAlert("Proceso completado", "La acción se ha completado exitosamente.", "success")
    //}
</script>
    <script>
        // ----------------------------------- EVENTS ------------------------------------
        $(document).ready(function () {

            var table = $("#grdActivities").DataTable({
                stateSave: true,
                language: {
                    "url": "https://cdn.datatables.net/plug-ins/1.10.21/i18n/Spanish.json"
                },
                //Aqui se ingresa el numero de columnas que tiene la tabla
                columns: [
                    {},
                    {},
                    {}
                ],
                order: [[1, 'asc']],
                dom: 'Bfrtip',

                //Son los botones de acciones para exportar
                buttons: [
                    {
                        extend: 'pdfHtml5',
                        text: '<i class= "file pdf icon"></i> Exportar como PDF',
                        className: "btn-primary ui small btn-grey text-purple icon ui button mb-2",
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    },
                    {
                        extend: 'excelHtml5',
                        text: '<i class="file excel icon"></i> Exportar a excel',
                        className: "btn-primary ui small btn-grey text-purple icon ui button mb-2",
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="file csv icon"></i> Exportar como CSV',
                        className: "btn-primary ui small btn-grey text-purple icon ui button mb-2"
                    },
                ]
            });
        });



        //------------------------------------Funciones------------------------

       

        function DeleteActividad(id) {
            const capsula1 = () => {
                var response = ajaxRequest("/Activities/Delete?id=" + id, null, "POST");
                window.location.href = '/Activities?success=true';
            };


            sweetAlertconfirm("Estas Seguro de Eliminar el Registro Seleccionado?", "Este registro se borrara permanentemente", "warning", capsula1);
            
        };
    </script>
}

    @section HighlightTile{
    <script>

        $("#ActivitiesModule").addClass("active");
        $("#ActivitiesModule").addClass("expandedList");
        $("#ActivitiesModule").prop("aria-expanded");
        $("#ActivitiesModule").attr("aria-expanded", "true");

        $("#Activity_Schema").addClass("show");

        $("#ActivitiesTile").addClass("activeTile");
    </script>
    }